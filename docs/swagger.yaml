consumes:
- application/json
definitions:
  AppointmentPatch:
    properties:
      date:
        type: string
      dentist_id:
        type: integer
      description:
        type: string
      patient_id:
        type: integer
    type: object
  AppointmentPost:
    properties:
      date:
        type: string
      dentist_license:
        type: string
      description:
        type: string
      patient_dni:
        type: string
    required:
    - date
    - dentist_license
    - description
    - patient_dni
    type: object
  AppointmentPut:
    properties:
      date:
        type: string
      dentist_id:
        type: integer
      description:
        type: string
      patient_id:
        type: integer
    required:
    - date
    - dentist_id
    - description
    - patient_id
    type: object
  AppointmentResponse:
    properties:
      date:
        type: string
      dentist_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      patient_id:
        type: integer
    type: object
  DentistPatch:
    properties:
      last_name:
        type: string
      license:
        type: string
      name:
        type: string
    type: object
  DentistPost:
    properties:
      last_name:
        type: string
      license:
        type: string
      name:
        type: string
    required:
    - last_name
    - license
    - name
    type: object
  DentistPut:
    properties:
      last_name:
        type: string
      license:
        type: string
      name:
        type: string
    required:
    - last_name
    - license
    - name
    type: object
  DentistResponse:
    properties:
      id:
        type: integer
      last_name:
        type: string
      license:
        type: string
      name:
        type: string
    type: object
  ErrorResponse:
    properties:
      errors:
        items:
          type: string
        type: array
      message:
        type: string
      path:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  PatientPatch:
    properties:
      address:
        type: string
      admission_date:
        type: string
      dni:
        type: string
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
    type: object
  PatientPost:
    properties:
      address:
        type: string
      admission_date:
        type: string
      dni:
        type: string
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
    required:
    - address
    - admission_date
    - dni
    - email
    - last_name
    - name
    type: object
  PatientPut:
    properties:
      address:
        type: string
      admission_date:
        type: string
      dni:
        type: string
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
    required:
    - address
    - admission_date
    - dni
    - email
    - last_name
    - name
    type: object
  PatientResponse:
    properties:
      address:
        type: string
      admission_date:
        type: string
      dni:
        type: string
      email:
        type: string
      id:
        type: integer
      last_name:
        type: string
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: gabriela.calicanton@gmail.com
    name: Gabriela Cecilia Calicanton
    url: http://www.swagger.io/support
  description: API of Dental Clinic
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Dental Clinic API
  version: "2.0"
paths:
  /appointments:
    get:
      description: Get all Appointments
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AppointmentResponse'
            type: array
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all Appointments
      tags:
      - Appointment
    post:
      description: Create a Appointment
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: AppointmentResponse
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/AppointmentPost'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/AppointmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Create a Appointment
      tags:
      - Appointment
  /appointments/{id}:
    delete:
      description: Delete a Appointment
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Delete a Appointment
      tags:
      - Appointment
    get:
      description: Get Appointment by id
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AppointmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Appointment by id
      tags:
      - Appointment
    patch:
      description: Patch a Appointment
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      - description: AppointmentResponse
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/AppointmentPatch'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AppointmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Patch a Appointment
      tags:
      - Appointment
    put:
      description: Update a Appointment
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      - description: AppointmentResponse
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/AppointmentPut'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AppointmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Update a Appointment
      tags:
      - Appointment
  /appointments/q:
    get:
      description: Get Appointment by DNI
      parameters:
      - description: Patient DNI
        in: query
        name: dni
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AppointmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Appointment by DNI
      tags:
      - Appointment
  /dentists:
    get:
      description: Get all Dentists
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/DentistResponse'
            type: array
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all Dentists
      tags:
      - Dentist
    post:
      description: Create a Dentist
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: DentistResponse
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/DentistPost'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/DentistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Create a Dentist
      tags:
      - Dentist
  /dentists/{id}:
    delete:
      description: Delete a Dentist
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Dentist ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Delete a Dentist
      tags:
      - Dentist
    get:
      description: Get Dentist by id
      parameters:
      - description: Dentist ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DentistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Dentist by id
      tags:
      - Dentist
    patch:
      description: Patch a Dentist
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: DentistResponse
        in: body
        name: Dentist
        required: true
        schema:
          $ref: '#/definitions/DentistPatch'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DentistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Patch a Dentist
      tags:
      - Dentist
    put:
      description: Update a Dentist
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: DentistResponse
        in: body
        name: Dentist
        required: true
        schema:
          $ref: '#/definitions/DentistPut'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DentistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Update a Dentist
      tags:
      - Dentist
  /dentists/q:
    get:
      description: Get Dentist by License
      parameters:
      - description: Dentist License
        in: query
        name: license
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DentistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Dentist by License
      tags:
      - Dentist
  /patients:
    get:
      description: Get all Patients
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/PatientResponse'
            type: array
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all Patients
      tags:
      - Patient
    post:
      description: Create a Patient
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: PatientResponse
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/PatientPost'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PatientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Create a Patient
      tags:
      - Patient
  /patients/{id}:
    delete:
      description: Delete a Patient
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Delete a Patient
      tags:
      - Patient
    get:
      description: Get Patient by id
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PatientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Patient by id
      tags:
      - Patient
    patch:
      description: Patch a Patient
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      - description: PatientResponse
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/PatientPatch'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PatientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Patch a Patient
      tags:
      - Patient
    put:
      description: Update a Patient
      parameters:
      - description: Public Key
        in: header
        name: PUB_KEY
        required: true
        type: string
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      - description: PatientResponse
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/PatientPut'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PatientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - APIKey: []
      summary: Update a Patient
      tags:
      - Patient
  /patients/q:
    get:
      description: Get Patient by DNI
      parameters:
      - description: Patient DNI
        in: query
        name: dni
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PatientResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Patient by DNI
      tags:
      - Patient
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  APIKey:
    description: Add secret key here
    in: header
    name: SECRET_KEY
    type: apiKey
swagger: "2.0"
tags:
- description: Patient operations for managing Patient
  externalDocs:
    description: Patient operations for managing Patient
    url: http://swagger.io/terms/
  name: Patient
- description: Dentist operations for managing Dentist
  externalDocs:
    description: Dentist operations for managing Dentist
    url: http://swagger.io/terms/
  name: Dentist
- description: Appointment operations for managing Appointment
  externalDocs:
    description: Appointment operations for managing Appointment
    url: http://swagger.io/terms/
  name: Appointment
